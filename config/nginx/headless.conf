server {
  listen [::]:80 default_server;
  listen 80 default_server;

  # Doesn't really matter because default server, but this way email doesn't throw errors.
  server_name localhost;

  sendfile off;

  # Increase proxy buffers for large requests
  proxy_buffer_size 128k;
  proxy_buffers 4 256k;
  proxy_busy_buffers_size 256k;

  # Upload limit
  client_max_body_size 50m;
  client_body_buffer_size 128k;

  root /var/www/wordpress;
  index index.php;

  rewrite /wp-admin$                        $scheme://$host$uri/               permanent;
  rewrite ^/([a-z]+)?-?sitemap.xsl$         /index.php?xsl=$1                  last;
  rewrite ^/sitemap_index.xml$              /index.php?sitemap=1               last;
  rewrite ^/([^/]+?)-sitemap([0-9]+)?.xml$  /index.php?sitemap=$1&sitemap_n=$2 last;

  location ~ \.php$ {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;

    try_files $uri =404;
    #try_files $fastcgi_script_name =404;

    # Bypass the fact that try_files resets $fastcgi_path_info
    # see: http://trac.nginx.org/nginx/ticket/321
    set $path_info $fastcgi_path_info;

    fastcgi_buffer_size 128k;
    fastcgi_buffers 4 256k;
    fastcgi_busy_buffers_size 256k;

    fastcgi_index index.php;
    fastcgi_pass  unix:/var/run/php-fpm.sock;

    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;

    # Forward the scheme from upstream
    fastcgi_param HTTPS $forwarded_scheme;
  }

  location / {
    proxy_pass         http://frontend:3000;
    proxy_http_version 1.1;

    proxy_set_header   Upgrade     $http_upgrade;
    proxy_set_header   Connection  "upgrade";

    #error_page    502  @start-webpack-dev-server;
  }

  # redirect server error pages to the static page /50x.html
  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /var/lib/nginx/html;
  }

  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  location = /robots.txt {
    log_not_found off;
    access_log off;
  }

  location ~ ^/(wp|feed) {
    try_files $uri $uri/ /index.php?$args;
  }

  location ~ embed/?$ {
    try_files $uri $uri/ /index.php?$args;
  }

  # Based on https://codeable.io/wordpress-developers-intro-to-docker-part-two/
  location /wp-content {
    root /var/www;
    expires 7d;
    add_header Cache-Control "public";

    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
      expires    1M;
      access_log off;
      add_header Cache-Control "public";
    }
  }

  # deny access to . files, for security
  location ~ /\. {
    log_not_found off;
    deny all;
  }
}
